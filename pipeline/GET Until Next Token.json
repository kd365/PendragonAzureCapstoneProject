{
	"name": "GET Until Next Token",
	"properties": {
		"activities": [
			{
				"name": "Query",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "Query",
					"value": "\"NATO\" lang:en -is:retweet -is:reply"
				}
			},
			{
				"name": "Max Results",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "max_results",
					"value": "100"
				}
			},
			{
				"name": "Tweet Fields",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "Tweet Fields",
					"value": "id,text,created_at,lang,public_metrics"
				}
			},
			{
				"name": "Delete Previous Output Files",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Query",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Max Results",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Tweet Fields",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "Raw_Aithusa_Outputs",
						"type": "DatasetReference"
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "Delete Previous Merged Output files",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "Query",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "Merged_Aithusa_JSON_folder",
						"type": "DatasetReference"
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "GET using Next Token Until Empty",
				"type": "Until",
				"dependsOn": [
					{
						"activity": "Set variable1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@bool(variables('anotherPull'))",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Extract Next Token Aithusa",
							"type": "ExecuteDataFlow",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataflow": {
									"referenceName": "Get Next Token for Aithusa",
									"type": "DataFlowReference"
								},
								"integrationRuntime": {
									"referenceName": "WarmIntegrationRuntime",
									"type": "IntegrationRuntimeReference"
								},
								"traceLevel": "None",
								"cacheSinks": {
									"firstRowOnly": true
								}
							}
						},
						{
							"name": "Delete Temp File",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "Extract Next Token Aithusa",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "json_Aithusa",
									"type": "DatasetReference"
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "GET to Temp",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Delete Temp File",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"paginationRules": {
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "RestResource_Aithusa_7days_NextToken",
									"type": "DatasetReference",
									"parameters": {
										"query": {
											"value": "@variables('Query')",
											"type": "Expression"
										},
										"tweet_fields": {
											"value": "@variables('Tweet Fields')",
											"type": "Expression"
										},
										"max_results": {
											"value": "@variables('max_results')",
											"type": "Expression"
										},
										"next_token": {
											"value": "@activity('Extract Next Token Aithusa').output.runStatus.output.sink1.value[0].next_token",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "json_Aithusa",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "If Condition1",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "GET to Temp",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@empty(activity('Extract Next Token Aithusa').output.runStatus.output.sink1.value[0].next_token)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "Set another pull",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "anotherPull",
											"value": "false"
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Set anotherPull",
										"type": "SetVariable",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"variableName": "anotherPull",
											"value": "true"
										}
									}
								]
							}
						},
						{
							"name": "If specific date with token",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Delete Temp File",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@variables('specific_date')",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "GET Past 7 Days with token",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "RestSource",
												"httpRequestTimeout": "00:01:40",
												"requestInterval": "00.00:00:00.010",
												"requestMethod": "GET",
												"paginationRules": {
													"supportRFC5988": "true"
												}
											},
											"sink": {
												"type": "JsonSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "JsonWriteSettings"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "RestResource_Aithusa_7days_NextToken",
												"type": "DatasetReference",
												"parameters": {
													"query": {
														"value": "@variables('Query')",
														"type": "Expression"
													},
													"tweet_fields": {
														"value": "@variables('Tweet Fields')",
														"type": "Expression"
													},
													"max_results": {
														"value": "@variables('max_results')",
														"type": "Expression"
													},
													"next_token": {
														"value": "@variables('next_token')",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "json_Aithusa",
												"type": "DatasetReference"
											}
										]
									}
								],
								"ifTrueActivities": [
									{
										"name": "GET with specifc date with token",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "RestSource",
												"httpRequestTimeout": "00:01:40",
												"requestInterval": "00.00:00:00.010",
												"requestMethod": "GET",
												"paginationRules": {
													"supportRFC5988": "true"
												}
											},
											"sink": {
												"type": "JsonSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "JsonWriteSettings"
												}
											},
											"enableStaging": false
										},
										"inputs": [
											{
												"referenceName": "RestResource_Aithusa_withToken",
												"type": "DatasetReference",
												"parameters": {
													"Query": {
														"value": "@variables('Query')",
														"type": "Expression"
													},
													"max_results": {
														"value": "@variables('max_results')",
														"type": "Expression"
													},
													"tweet_fields": {
														"value": "@variables('Tweet Fields')",
														"type": "Expression"
													},
													"start_year": {
														"value": "@variables('start_year')",
														"type": "Expression"
													},
													"start_month": {
														"value": "@variables('start_month')",
														"type": "Expression"
													},
													"start_day": {
														"value": "@variables('start_day')",
														"type": "Expression"
													},
													"start_hour": {
														"value": "@variables('start_hour')",
														"type": "Expression"
													},
													"start_minute": {
														"value": "@variables('start_minute')",
														"type": "Expression"
													},
													"start_second": "00",
													"end_year": {
														"value": "@variables('end_year')",
														"type": "Expression"
													},
													"end_month": {
														"value": "@variables('end_month')",
														"type": "Expression"
													},
													"end_day": {
														"value": "@variables('end_day')",
														"type": "Expression"
													},
													"end_hour": {
														"value": "@variables('end_hour')",
														"type": "Expression"
													},
													"end_minute": {
														"value": "@variables('end_minute')",
														"type": "Expression"
													},
													"end_second": "01]",
													"next_token": {
														"value": "@activity('Extract Next Token Aithusa').output.runStatus.output.sink1.value[0].next_token",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "json_Aithusa",
												"type": "DatasetReference"
											}
										]
									}
								]
							}
						}
					],
					"timeout": "0.12:00:00"
				}
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "If specific date",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "anotherPull",
					"value": "false"
				}
			},
			{
				"name": "Delete NATO Temp file",
				"type": "Delete",
				"dependsOn": [
					{
						"activity": "GET using Next Token Until Empty",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "json_Aithusa",
						"type": "DatasetReference"
					},
					"enableLogging": false,
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					}
				}
			},
			{
				"name": "Merge JSONs and Convert to CSV",
				"type": "ExecuteDataFlow",
				"dependsOn": [
					{
						"activity": "Delete NATO Temp file",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataflow": {
						"referenceName": "Merge JSONs and Convert to CSV for Aithusa",
						"type": "DataFlowReference"
					},
					"integrationRuntime": {
						"referenceName": "WarmIntegrationRuntime",
						"type": "IntegrationRuntimeReference"
					},
					"traceLevel": "Fine"
				}
			},
			{
				"name": "End year",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "end_year",
					"value": "2023"
				}
			},
			{
				"name": "End month",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "End year",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "end_month",
					"value": "03"
				}
			},
			{
				"name": "End day",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "End month",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "end_day",
					"value": "26"
				}
			},
			{
				"name": "End hour",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "End day",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "end_hour",
					"value": "12"
				}
			},
			{
				"name": "End minute",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "End hour",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "end_minute",
					"value": "00"
				}
			},
			{
				"name": "Start year",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "start_year",
					"value": "2023"
				}
			},
			{
				"name": "Start month",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Start year",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "start_month",
					"value": "03"
				}
			},
			{
				"name": "Start day",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Start month",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "start_day",
					"value": "25"
				}
			},
			{
				"name": "Start hour",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Start day",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "start_hour",
					"value": "00"
				}
			},
			{
				"name": "Start minute",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Start hour",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "start_minute",
					"value": "00"
				}
			},
			{
				"name": "Use date range",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Start minute",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "End minute",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "specific_date",
					"value": true
				}
			},
			{
				"name": "If specific date",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Delete Previous Merged Output files",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "Delete Previous Output Files",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@variables('specific_date')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Initial GET Past 7 Days",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"paginationRules": {
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "RestResource_Aithusa_7days",
									"type": "DatasetReference",
									"parameters": {
										"query": {
											"value": "@variables('Query')",
											"type": "Expression"
										},
										"tweet_fields": {
											"value": "@variables('Tweet Fields')",
											"type": "Expression"
										},
										"max_results": {
											"value": "@variables('max_results')",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "json_Aithusa",
									"type": "DatasetReference"
								}
							]
						}
					],
					"ifTrueActivities": [
						{
							"name": "Initial GET with specifc date",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"paginationRules": {
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "JsonSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "JsonWriteSettings"
									}
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "RestResource_Aithusa",
									"type": "DatasetReference",
									"parameters": {
										"Query": {
											"value": "@variables('Query')",
											"type": "Expression"
										},
										"max_results": {
											"value": "@variables('max_results')",
											"type": "Expression"
										},
										"tweet_fields": {
											"value": "@variables('Tweet Fields')",
											"type": "Expression"
										},
										"start_year": {
											"value": "@variables('start_year')",
											"type": "Expression"
										},
										"start_month": {
											"value": "@variables('start_month')",
											"type": "Expression"
										},
										"start_day": {
											"value": "@variables('start_day')",
											"type": "Expression"
										},
										"start_hour": {
											"value": "@variables('start_hour')",
											"type": "Expression"
										},
										"start_minute": {
											"value": "@variables('start_minute')",
											"type": "Expression"
										},
										"start_second": "00",
										"end_year": {
											"value": "@variables('end_year')",
											"type": "Expression"
										},
										"end_month": {
											"value": "@variables('end_month')",
											"type": "Expression"
										},
										"end_day": {
											"value": "@variables('end_day')",
											"type": "Expression"
										},
										"end_hour": {
											"value": "@variables('end_hour')",
											"type": "Expression"
										},
										"end_minute": {
											"value": "@variables('end_minute')",
											"type": "Expression"
										},
										"end_second": "00"
									}
								}
							],
							"outputs": [
								{
									"referenceName": "json_Aithusa",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			}
		],
		"variables": {
			"Query": {
				"type": "String"
			},
			"max_results": {
				"type": "String"
			},
			"Tweet Fields": {
				"type": "String"
			},
			"Number of Tweets to Pull": {
				"type": "String"
			},
			"next_token": {
				"type": "String"
			},
			"anotherPull": {
				"type": "String"
			},
			"specific_date": {
				"type": "Boolean"
			},
			"end_year": {
				"type": "String"
			},
			"end_month": {
				"type": "String"
			},
			"end_day": {
				"type": "String"
			},
			"end_hour": {
				"type": "String"
			},
			"end_minute": {
				"type": "String"
			},
			"start_year": {
				"type": "String"
			},
			"start_month": {
				"type": "String"
			},
			"start_day": {
				"type": "String"
			},
			"start_hour": {
				"type": "String"
			},
			"start_minute": {
				"type": "String"
			}
		},
		"annotations": []
	}
}